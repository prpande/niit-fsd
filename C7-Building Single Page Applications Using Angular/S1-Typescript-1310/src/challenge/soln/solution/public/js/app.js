"use strict";
const url = "http://localhost:3000/fruits";
const fruitBasket = document.getElementById("fruitBasket");
// Note:As per test requirement, Fruits API should be running on port 3000
function getFruits() {
    //Return the promise returned by the fetch() method
    return fetch(url)
        //Successful promise callback function should convert the response body text to json object and return the promise as result.
        .then(response => response.json())
        .then(data => {
        console.log(`Fetched fruit data. Count:${data.length}`);
        //Returned successful promise callback should call `transform()` method by passing the json object as argument
        transform(data);
    });
}
//Inside transform() function, iterate the json data passed as parameter.
//Then transform each fruit to transformedFruit object that mirrors Fruit type 
function transform(data) {
    fruitBasket === null || fruitBasket === void 0 ? void 0 : fruitBasket.replaceChildren();
    data.forEach((element) => {
        showFruit(element);
    });
    //call showFruit() function for each transformedFruit object
}
//Inside showFruit() function, pass transformedFruit object as parameter
function showFruit(fruit) {
    //display each transformedFruit as card by creating HTML code as string and appending it to the div container
    console.log(`Appending:${fruit.name}`);
    let fruitCard = document.createElement("div");
    fruitCard.classList.add("card", "col-2", "fruitCard");
    let imgContainer = document.createElement("div");
    imgContainer.classList.add("imgContainer");
    let img = document.createElement("img");
    img.classList.add("cardImg");
    img.alt = fruit.name;
    img.src = fruit.image;
    let cardBody = document.createElement("div");
    cardBody.classList.add("card-body", "p-0");
    let cardTitle = document.createElement("h5");
    cardTitle.classList.add("cardTitle");
    cardTitle.textContent = fruit.name;
    let cardText = document.createElement("p");
    cardText.classList.add("cardText");
    cardText.textContent = `Price:$${fruit.price} per ${fruit.unit}`;
    cardBody.appendChild(cardTitle);
    cardBody.appendChild(cardText);
    imgContainer.appendChild(img);
    fruitCard.appendChild(imgContainer);
    fruitCard.appendChild(cardBody);
    fruitBasket === null || fruitBasket === void 0 ? void 0 : fruitBasket.appendChild(fruitCard);
}
//compiler error for "module" will be resolved once node_modules folder is generated by giving 'npm install' command in the terminal
// do not delete the code given below, it is written to export the functions to be tested
module.exports = {
    getFruits
};
